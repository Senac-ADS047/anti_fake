
# Tutorial Completo - Como baixar, rodar e enviar alterações no projeto (Git + GitHub + VSCode)

## ⚙️ Requisitos:
- Git instalado (https://git-scm.com/downloads)
- Python instalado (https://www.python.org/downloads/)
- Visual Studio Code instalado (https://code.visualstudio.com/)
- Acesso ao repositório GitHub

---

## 📁 CRIANDO A PASTA DO PROJETO E ABRINDO NO VS CODE

1. Crie uma pasta em algum local do seu computador. Exemplo: na Área de Trabalho, crie a pasta `antifake` ou o nome que preferir.
2. Clique com o botão direito dentro da pasta `antifake` e selecione **"Abrir com o Code"**.
   > Ou abra o VS Code e vá em **Arquivo > Abrir Pasta...** e escolha a pasta.
   > Ou arraste a pasta para o VSCode

---



## ☁️ CLONANDO O PROJETO DO GITHUB

Se ainda não fez, instale o Git (https://git-scm.com/) e configure uma conta no GitHub.

No terminal do VS Code (para abrir o terminal atalho: `Ctrl + aspas` ou `Ctrl + Shift + '`):

```
git clone https://github.com/Senac-ADS047/anti_fake.git
```

Entre na pasta clonada digitando no terminal:

```
cd anti_fake

```

## 🐍 CRIANDO O AMBIENTE VIRTUAL (Windows)

No terminal dentro da pasta clonada:

```
python -m venv venv
```

Depois, ative a máquina virtual com:

```
venv\Scripts\activate
```

Se tudo der certo, você verá `(venv)` aparecendo no início da linha do terminal.

---


---

## 📦 INSTALANDO DEPENDÊNCIAS DO PROJETO

Se o projeto tem um arquivo chamado `requirements.txt`, rode:

```
pip install -r requirements.txt
```

Esse comando instala todas as bibliotecas necessárias.

## Banco de dados e senhas:

Abra seu workbench e crie um database com nome de antifake_db.

Dentro do projeto, vai ter um arquivo com nome de .env.example, faça uma copia dele
e altere para o nome para .env   (não esqueça do " . " no inicio do nome)
Dentro desse arquivo .env, coloque o nome do DB, o user e sua senha padrão do workbench

No terminal copie e cole o codigo abaixo:
python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"


Ele vai gerar a secret_key que precisa estar no .env entre '', por exemplo:

SECRET_KEY='1234567891234afzvdfs'


## Criando as tabelas do BD:
No terminal:
´´´
python manage.py makemigrations
´´´

´´´
python manage.py migrate
´´´


## Execuldado o sistema:

No terminal:
´´´
python manage.py createsuperuser

´´´

Preencha os dados que o Django vai pedir:
Username (nome de usuário)

Email address (pode ser fictício em testes)

Password (vai pedir para repetir)

Pronto! Agora você pode acessar o painel de administração:
Acesse no navegador:

http://127.0.0.1:8000/admin/
Use o login e a senha que acabou de criar.


No terminal:

```
python manage.py runserver
```
Ele vai da um retornar no terminal algo assim:
(venv) PS C:\Anderson\Senac\teste\anti_fake> python manage.py runserver
Watching for file changes with StatReloader
Performing system checks...

System check identified no issues (0 silenced).
May 21, 2025 - 12:59:20
Django version 5.2, using settings 'setup.settings'
Starting development server at http://127.0.0.1:8000/
Quit the server with CTRL-BREAK.

O sistema esta rodando no link mostrado acima
http://127.0.0.1:8000/

---
